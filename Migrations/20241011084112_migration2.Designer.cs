// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskMasterAPI.Data;

#nullable disable

namespace TaskMasterAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241011084112_migration2")]
    partial class migration2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("TaskMasterAPI.Models.GitHubIssueLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("IssueCreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("IssueNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IssueState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IssueTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("IssueUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("IssueUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TaskId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("GitHubIssueLinks");
                });

            modelBuilder.Entity("TaskMasterAPI.Models.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssignedUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignedUserId = 1,
                            Description = "This is the first task",
                            Status = "Pending",
                            Title = "First Task"
                        },
                        new
                        {
                            Id = 2,
                            AssignedUserId = 2,
                            Description = "This is the second task",
                            Status = "Completed",
                            Title = "Second Task"
                        });
                });

            modelBuilder.Entity("TaskMasterAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "hashedpassword",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "hashedpassword",
                            Role = "User",
                            Username = "user1"
                        });
                });

            modelBuilder.Entity("TaskMasterAPI.Models.GitHubIssueLink", b =>
                {
                    b.HasOne("TaskMasterAPI.Models.TaskItem", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });
#pragma warning restore 612, 618
        }
    }
}
